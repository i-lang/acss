@import "flex-border";
@import '../base/rwd';

@media @rwd {
  .l-gutter-build('', 150, 5);
}

@media @rwd-xs {
  .l-gutter-build('xs-', 150, 5);
}

@media @rwd-sm {
  .l-gutter-build('sm-', 150, 5);
}

@media @rwd-md {
  .l-gutter-build('md-', 150, 5);
}

@media @rwd-lg {
  .l-gutter-build('lg-', 150, 5);
}

@media @rwd-xl {
  .l-gutter-build('xl-', 150, 5);
}

// =================================
// mixins
// =================================

// gutter builder
.l-gutter-build(@rwd, @gutter, @diff) when (@gutter > 0) {
  .l-gutter-build(@rwd, @gutter - @diff, @diff);

  l-row {
    @data-gutter-between: ~'data-@{rwd}gutter-between';
    &[@{data-gutter-between}="@{gutter}"] {
      .rowGutterBetween(@rwd, @gutter);
    }

    @data-gutter-around: ~'data-@{rwd}gutter-around';
    &[@{data-gutter-around}="@{gutter}"] {
      .rowGutterAround(@rwd, @gutter);
    }
  }
  l-col {
    @data-gutter-between: ~'data-@{rwd}gutter-between';
    &[@{data-gutter-between}="@{gutter}"] {
      .colGutterBetween(@rwd, @gutter);
    }

    @data-gutter-around: ~'data-@{rwd}gutter-around';
    &[@{data-gutter-around}="@{gutter}"] {
      .colGutterAround(@rwd, @gutter);
    }
  }
}

// row mixin
.rowGutterBetween(@rwd, @rowGutter) {
  .rowGutterBorderBetween(@rwd, @rowGutter);
  .rowGutterBorderAround(@rwd, @rowGutter);

  > * {
    margin-left: @rowGutter / 2px;
    margin-right: @rowGutter / 2px;
  }

  > *:first-child {
    margin-left: 0;
  }

  > *:last-child {
    margin-right: 0;
  }
}

.rowGutterAround(@rwd, @rowGutter) {
  .rowGutterBorderBetween(@rwd, @rowGutter);
  .rowGutterBorderAround(@rwd, @rowGutter);
  .rowGutterAroundBorderAround(@rwd, @rowGutter);

  > * {
    margin-left: @rowGutter / 2px;
    margin-right: @rowGutter / 2px;
  }
}

.colGutterBetween(@rwd, @colGutter) {
  .colGutterBorderBetween(@rwd, @colGutter);
  .colGutterBorderAround(@rwd, @colGutter);

  > * {
    margin-top: @colGutter / 2px;
    margin-bottom: @colGutter / 2px;
  }

  > *:first-child {
    margin-top: 0;
  }
  > *:last-child {
    margin-bottom: 0;
  }
}

.colGutterAround(@rwd, @colGutter) {
  .colGutterBorderBetween(@rwd, @colGutter);
  .colGutterBorderAround(@rwd, @colGutter);
  .colGutterAroundBorderAround(@rwd, @colGutter);

  > * {
    margin-top: @colGutter / 2px;
    margin-bottom: @colGutter / 2px;
  }
}
