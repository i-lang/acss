@import '../base/util';
@import '../base/default';
@import 'compass/css3';

@mixin build-row-divider-between-thickness($thickness) {
  &[acss-divider-width="#{$thickness}"] {
    > *:not(:first-child):before {
      width: px($thickness);
      @include transform(translateX(px(-$thickness / 2)));
    }
  }
}

@mixin build-row-divider-around-thickness($thickness) {
  &[acss-divider-width="#{$thickness}"] {
    > *:before {
      width: px($thickness);
      @include transform(translateX(px(-$thickness / 2)));
    }

    > *:last-child:after {
      width: px($thickness);
      @include transform(translateX(px(-$thickness / 2)));
    }
  }
}

@mixin build-col-divider-between-thickness($thickness) {
  &[acss-divider-width="#{$thickness}"] {
    > *:not(:first-child):before {
      height: px($thickness);
      @include transform(translateY(px(-$thickness / 2)));
    }
  }
}

@mixin build-col-divider-around-thickness($thickness) {
  &[acss-divider-width="#{$thickness}"] {
    > *:before {
      height: px($thickness);
      @include transform(translateY(px(-$thickness / 2)));
    }

    > *:last-child:after {
      height: px($thickness);
      @include transform(translateY(px(-$thickness / 2)));
    }
  }
}

@mixin build-flex-divider-width-attribute($rwd) {
  $thickness: $divider-thickness-min;
  @while $thickness <= $divider-thickness-max {
    .l-row {
      @include build-row-divider-between-thickness($thickness);
      @include build-row-divider-around-thickness($thickness);
    }

    .l-col {
      @include build-col-divider-between-thickness($thickness);
      @include build-col-divider-around-thickness($thickness);
    }

    $thickness: $thickness + 1;
  }
}
