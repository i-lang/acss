@import '../base/rwd';
@import '../base/default';
@import '../base/util';

@mixin row-divider-style {
  content: '';
  height: 100%;
  position: absolute;
  top: 0;
}

@mixin build-row-divider-between-attribute($rwd) {
  &[acss#{$rwd}-divider="between"] {
    > *:not(:first-child) {
      position: relative;
    }

    > *:not(:first-child):before {
      @include row-divider-style;
    }
  }
}

@mixin build-row-divider-between-gutter-between($rwd, $row-gutter) {
  &[acss#{$rwd}-divider="between"] {
    > *:not(:first-child):before {
      left: px(-$row-gutter / 2);
    }
  }
}

@mixin build-row-divider-between-gutter-around($rwd, $row-gutter) {
  @include build-row-divider-between-gutter-between($rwd, $row-gutter);
}

@mixin build-row-divider-around-attribute($rwd) {
  &[acss#{$rwd}-divider="around"] {
    > * {
      position: relative;
    }

    > *:before {
      @include row-divider-style;
    }

    > *:last-child {
      &:after {
        @include row-divider-style;
      }
    }
  }
}

@mixin build-row-divider-around-gutter-between($rwd, $row-gutter) {
  &[acss#{$rwd}-divider="around"] {
    > *:first-child:before {
      left: 0;
    }

    > *:not(first-child):before {
      left: px(-$row-gutter / 2);
    }

    > *:last-child:after {
      right: 0;
    }
  }
}

@mixin build-row-divider-around-gutter-around($rwd, $row-gutter) {
  &[acss#{$rwd}-divider="around"] {
    > *:before {
      left: px(-$row-gutter / 2);
    }

    > *:last-child:after {
      right: px(-$row-gutter / 2);
    }
  }
}

@mixin col-divider-style {
  content: '';
  width: 100%;
  position: absolute;
  left: 0;
}

@mixin build-col-divider-between-attribute($rwd) {
  &[acss#{$rwd}-divider="between"] {
    > *:not(:first-child) {
      position: relative;

      &:before {
        @include col-divider-style;
      }
    }
  }
}

@mixin build-col-divider-between-gutter-between($rwd, $col-gutter) {
  &[acss#{$rwd}-divider="between"] {
    > *:not(:first-child):before {
      top: px(-$col-gutter / 2);
    }
  }
}

@mixin build-col-divider-between-gutter-around($rwd, $col-gutter) {
  @include build-col-divider-between-gutter-between($rwd, $col-gutter);
}

@mixin build-col-divider-around-attribute($rwd) {
  &[acss#{$rwd}-divider="around"] {
    > * {
      position: relative;
    }

    > *:before {
      @include col-divider-style;
    }

    > *:last-child:after {
      @include col-divider-style;
    }
  }
}

@mixin build-col-divider-around-gutter-between($rwd, $col-gutter) {
  &[acss#{$rwd}-divider="around"] {
    > *:first-child:before {
      top: 0;
    }

    > *:not(:first-child):before {
      top: px(-$col-gutter / 2);
    }

    > *:last-child:after {
      bottom: 0;
    }
  }
}

@mixin build-col-divider-around-gutter-around($rwd, $col-gutter) {
  &[acss#{$rwd}-divider="around"] {
    > *:before {
      top: px(-$col-gutter / 2);
    }

    > *:last-child:after {
      bottom: px(-$col-gutter / 2);
    }
  }
}

@mixin row-divider-between-width($thickness) {
  &[acss-divider-width="#{$thickness}"] {
    > *:not(:first-child):before {
      width: px($thickness);
    }
  }
}

@mixin row-divider-around-width($thickness) {
  &[acss-divider-width="#{$thickness}"] {
    > *:before {
      width: px($thickness);
    }

    > *:last-child:after {
      width: px($thickness);
    }
  }
}

@mixin col-divider-between-width($thickness) {
  &[acss-divider-width="#{$thickness}"] {
    > *:not(:first-child):before {
      height: px($thickness);
    }
  }
}

@mixin col-divider-around-width($thickness) {
  &[acss-divider-width="#{$thickness}"] {
    > *:before {
      height: px($thickness);
    }

    > *:last-child:after {
      height: px($thickness);
    }
  }
}

@mixin row-divider-between-color($color-name, $color) {
  .l-row[acss-divider-color="#{$color-name}"] {
    > *:not(:first-child):before {
      background-color: $color;
    }
  }
}

@mixin row-divider-around-color($color-name, $color) {
  .l-row[acss-divider-color="#{$color-name}"] {
    > *:before {
      background-color: $color;
    }

    > *:last-child:after {
      background-color: $color;
    }
  }
}

@mixin col-divider-between-color($color-name, $color) {
  .l-col[acss-divider-color="#{$color-name}"] {
    > *:not(:first-child):before {
      background-color: $color;
    }
  }
}

@mixin col-divider-around-color($color-name, $color) {
  .l-col[acss-divider-color="#{$color-name}"] {
    > *:before {
      background-color: $color;
    }

    > *:last-child:after {
      background-color: $color;
    }
  }
}

// rwd
@mixin build-flex-divider-attributes {
  .l-row {
    position: relative;
    @include build-row-divider-between-attribute($rwd);
    @include build-row-divider-around-attribute($rwd);
  }

  .l-col {
    position: relative;
    @include build-col-divider-between-attribute($rwd);
    @include build-col-divider-around-attribute($rwd);
  }

  $thickness: $divider-thickness-min;
  @while $thickness <= $divider-thickness-max {
    .l-row {
      @include row-divider-between-width($thickness);
      @include row-divider-around-width($thickness);
    }

    .l-col {
      @include col-divider-between-width($thickness);
      @include col-divider-around-width($thickness);
    }

    $thickness: $thickness + 1;
  }
}
