@import '_default';
@import 'text-color';
@import '../layout/flex/flex-divider-color';
@import '../module/border';
//@import '../module/table-divider-color';

$cached-colors: ();

@mixin cache-colors($colors) {
  $cached-colors: map-merge($cached-colors, $colors) !global;
}

@mixin build-bg-color($color-name, $color) {
  [acss-bg-color="#{$color-name}"] {
    background-color: $color;
  }
}

@mixin build-color-attributes($colors) {
  @each $color-name, $color in $colors {
    @include build-font-color($color-name, $color);
    @include build-placeholder-color($color-name, $color);
    @include build-border-color($color-name, $color);
    @include build-divider-color($color-name, $color);
    @include build-bg-color($color-name, $color);
    //@include build-table-divider-color(unquote($color-name), $color);
  }
}

@function color($color-name) {
  $return-color: null;
  @each $cached-color-name, $color in $cached-colors {
    @debug 'color-name', $cached-color-name, $color-name;
    @if $cached-color-name==$color-name {
      @return $color;
    }
  }
}

@include cache-colors($transparent-color);
@include cache-colors($gray-colors);
@include cache-colors($black-colors);
@include cache-colors($white-colors);
