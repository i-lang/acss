@import '../../../../../../../../../../usr/local/lib/ruby/gems/2.2.0/gems/compass-core-1.0.3/stylesheets/compass/css3';
@import '../../base/util';

@mixin divider-y-style {
  height: 100%;
  position: absolute;
  top: 0;
}

[acss-divider-y] {
  position: relative;

  > :before {
    @include divider-y-style;
  }

  > :last-child:after {
    @include divider-y-style;
  }

  > :not(:first-child):before {
    content: '';
  }
}

@mixin build-divider-y($rwd, $divider-gap) {
  [acss-divider-y~="#{$divider-gap}#{$rwd}"] {
    > :before {
      top: px(-$divider-gap / 2);
      @include translateY(50%);
    }

    > :last-child:after {
      top: px(-$divider-gap / 2);
      @include translateY(50%);
    }
  }
}

@mixin build-divider-y-attribute($rwd) {
  $min-divider-gap: 0;
  $max-divider-gap: 100;
  $divider-gap: $min-divider-gap;
  @while ($divider-gap <= $max-divider-gap) {
    @include build-divider-y($rwd, $divider-gap);
    $divider-gap: $divider-gap + 5;
  }

  [acss-divider-y][acss-divider-y~="around#{$rwd}"] {
    > :first-child:before {
      content: '' !important;
    }

    > :last-child:after {
      content: '' !important;
    }
  }
}

@mixin build-divider-height($rwd, $height) {
  [acss-divider-height~="#{$height}#{$rwd}"] {
    > :before, > :after {
      height: px($height);
    }
  }
}

@mixin build-divider-height-attribute($rwd) {
  $min-divider-height: 0;
  $max-divider-height: 10;
  $divider-height: $min-divider-height;
  @while ($divider-height <= $max-divider-height) {
    @include build-divider-height($rwd, $divider-height);
    $divider-height: $divider-height + 1;
  }
}

@mixin build-divider-y-attributes($rwd) {
  @include build-divider-y-attribute($rwd);
  @include build-divider-height-attribute($rwd);
}
